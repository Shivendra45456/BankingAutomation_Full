<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-08T17:32:27 IST" name="Banking Suite" finished-at="2025-09-08T17:33:20 IST" duration-ms="52356">
    <groups>
    </groups>
    <test started-at="2025-09-08T17:32:27 IST" name="Banking Tests Chrome" finished-at="2025-09-08T17:33:20 IST" duration-ms="52356">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.LoginTest@1757cd72]" started-at="2025-09-08T17:32:28 IST" name="setUp" finished-at="2025-09-08T17:32:35 IST" duration-ms="7754" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidLogin()[pri:0, instance:tests.LoginTest@1757cd72]" started-at="2025-09-08T17:32:35 IST" name="invalidLogin" finished-at="2025-09-08T17:32:42 IST" duration-ms="7007" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.xpath: //*[contains(text(),'The username and password could not be verified.')] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.23.0', revision: '4df0a231af'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.155, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\pshiv\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53119}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53119/devtoo..., se:cdpVersion: 139.0.7258.155, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0d6a2fa0c12c12d402c568f891c90711]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //*[contains(text(),'The username and password could not be verified.')] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.23.0', revision: '4df0a231af'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.155, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\pshiv\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53119}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53119/devtoo..., se:cdpVersion: 139.0.7258.155, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0d6a2fa0c12c12d402c568f891c90711
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at tests.LoginTest.invalidLogin(LoginTest.java:30)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1575)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@1757cd72]" started-at="2025-09-08T17:32:42 IST" name="tearDown" finished-at="2025-09-08T17:32:43 IST" duration-ms="844" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLogin status=FAILURE method=LoginTest.invalidLogin()[pri:0, instance:tests.LoginTest@1757cd72] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.LoginTest@1757cd72]" started-at="2025-09-08T17:32:43 IST" name="setUp" finished-at="2025-09-08T17:32:47 IST" duration-ms="3380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validLogin()[pri:0, instance:tests.LoginTest@1757cd72]" started-at="2025-09-08T17:32:47 IST" name="validLogin" finished-at="2025-09-08T17:32:48 IST" duration-ms="1016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@1757cd72]" started-at="2025-09-08T17:32:48 IST" name="tearDown" finished-at="2025-09-08T17:32:48 IST" duration-ms="167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLogin status=SUCCESS method=LoginTest.validLogin()[pri:0, instance:tests.LoginTest@1757cd72] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.TransferTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.TransferTest@2b4bac49]" started-at="2025-09-08T17:33:08 IST" name="setUp" finished-at="2025-09-08T17:33:12 IST" duration-ms="3928" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="fundTransfer()[pri:0, instance:tests.TransferTest@2b4bac49]" started-at="2025-09-08T17:33:12 IST" name="fundTransfer" finished-at="2025-09-08T17:33:13 IST" duration-ms="1508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fundTransfer -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TransferTest@2b4bac49]" started-at="2025-09-08T17:33:13 IST" name="tearDown" finished-at="2025-09-08T17:33:13 IST" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fundTransfer status=SUCCESS method=TransferTest.fundTransfer()[pri:0, instance:tests.TransferTest@2b4bac49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TransferTest -->
      <class name="tests.LoanTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.LoanTest@3f56875e]" started-at="2025-09-08T17:32:48 IST" name="setUp" finished-at="2025-09-08T17:32:51 IST" duration-ms="2876" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="emiCalculation()[pri:0, instance:tests.LoanTest@3f56875e]" started-at="2025-09-08T17:32:51 IST" name="emiCalculation" finished-at="2025-09-08T17:32:51 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emiCalculation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoanTest@3f56875e]" started-at="2025-09-08T17:32:51 IST" name="tearDown" finished-at="2025-09-08T17:32:51 IST" duration-ms="198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=emiCalculation status=SUCCESS method=LoanTest.emiCalculation()[pri:0, instance:tests.LoanTest@3f56875e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.LoanTest@3f56875e]" started-at="2025-09-08T17:32:51 IST" name="setUp" finished-at="2025-09-08T17:32:54 IST" duration-ms="3123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loanWithInvalidAmount()[pri:0, instance:tests.LoanTest@3f56875e]" started-at="2025-09-08T17:32:54 IST" name="loanWithInvalidAmount" finished-at="2025-09-08T17:32:55 IST" duration-ms="1504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanWithInvalidAmount -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoanTest@3f56875e]" started-at="2025-09-08T17:32:55 IST" name="tearDown" finished-at="2025-09-08T17:32:56 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loanWithInvalidAmount status=SUCCESS method=LoanTest.loanWithInvalidAmount()[pri:0, instance:tests.LoanTest@3f56875e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.LoanTest@3f56875e]" started-at="2025-09-08T17:32:56 IST" name="setUp" finished-at="2025-09-08T17:32:59 IST" duration-ms="3330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loanWithZeroDownPayment()[pri:0, instance:tests.LoanTest@3f56875e]" started-at="2025-09-08T17:32:59 IST" name="loanWithZeroDownPayment" finished-at="2025-09-08T17:33:01 IST" duration-ms="1654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanWithZeroDownPayment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoanTest@3f56875e]" started-at="2025-09-08T17:33:01 IST" name="tearDown" finished-at="2025-09-08T17:33:01 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loanWithZeroDownPayment status=SUCCESS method=LoanTest.loanWithZeroDownPayment()[pri:0, instance:tests.LoanTest@3f56875e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.LoanTest@3f56875e]" started-at="2025-09-08T17:33:01 IST" name="setUp" finished-at="2025-09-08T17:33:06 IST" duration-ms="5193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loanWithoutAccountSelection()[pri:0, instance:tests.LoanTest@3f56875e]" started-at="2025-09-08T17:33:06 IST" name="loanWithoutAccountSelection" finished-at="2025-09-08T17:33:08 IST" duration-ms="1519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanWithoutAccountSelection -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoanTest@3f56875e]" started-at="2025-09-08T17:33:08 IST" name="tearDown" finished-at="2025-09-08T17:33:08 IST" duration-ms="180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loanWithoutAccountSelection status=SUCCESS method=LoanTest.loanWithoutAccountSelection()[pri:0, instance:tests.LoanTest@3f56875e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoanTest -->
      <class name="tests.TransactionTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.TransactionTest@fd07cbb]" started-at="2025-09-08T17:33:13 IST" name="setUp" finished-at="2025-09-08T17:33:17 IST" duration-ms="3386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkTransactionHistory()[pri:0, instance:tests.TransactionTest@fd07cbb]" started-at="2025-09-08T17:33:17 IST" name="checkTransactionHistory" finished-at="2025-09-08T17:33:20 IST" duration-ms="2966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTransactionHistory -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TransactionTest@fd07cbb]" started-at="2025-09-08T17:33:20 IST" name="tearDown" finished-at="2025-09-08T17:33:20 IST" duration-ms="161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTransactionHistory status=SUCCESS method=TransactionTest.checkTransactionHistory()[pri:0, instance:tests.TransactionTest@fd07cbb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TransactionTest -->
    </test> <!-- Banking Tests Chrome -->
  </suite> <!-- Banking Suite -->
</testng-results>
